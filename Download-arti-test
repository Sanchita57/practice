# Define credentials
$Username = "<+stage.variables.Username>"
$Password = "<+stage.variables.Password>"
$SecurePassword = ConvertTo-SecureString $Password -AsPlainText -Force
$Credential = New-Object System.Management.Automation.PSCredential ($Username, $SecurePassword)

# Array of URLs of the files you want to download
$fileUrls = @(
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/container-ws-war/<+stage.variables.Container>/container-ws-war-<+stage.variables.Container>.war",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/tokenisation/<+stage.variables.Tokenisation>/tokenisation-<+stage.variables.Tokenisation>.war",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/data-vault/<+stage.variables.DataVault>/data-vault-<+stage.variables.DataVault>.war",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/key-registry-ws/<+stage.variables.KeyRegistry>/key-registry-ws-<+stage.variables.KeyRegistry>.war",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/binservice/<+stage.variables.BinService>/binservice-<+stage.variables.BinService>.war",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/notification/<+stage.variables.NotificationService>/notification-<+stage.variables.NotificationService>.war",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/notification/<+stage.variables.NotificationService>/notification-<+stage.variables.NotificationService>.jar",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/adminservices/<+stage.variables.AdminService>/adminservices-<+stage.variables.AdminService>.war",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/authservice-application/<+stage.variables.AuthService>/authservice-application-<+stage.variables.AuthService>.war",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/till-api-gateway/<+stage.variables.TillAPIGateway>/till-api-gateway-<+stage.variables.TillAPIGateway>.jar",
    "https://artifactory.fis.dev/ui/native/webpay-maven-release-local/com/fis/container/admin-console/<+stage.variables.AdminConsole>/admin-console-<+stage.variables.AdminConsole>.zip"
)

$destination = "F:\sanchita\Rollback\digipay1"
New-Item -ItemType Directory -Force -Path $destination | Out-Null

$versions = @{
    "container-ws-war" = "<+stage.variables.Container>"
    "tokenisation" = "<+stage.variables.Tokenisation>"
    "data-vault" = "<+stage.variables.DataVault>"
    "key-registry-ws" = "<+stage.variables.KeyRegistry>"
    "binservice" = "<+stage.variables.BinService>"
    "notification" = "<+stage.variables.NotificationService>"
    "adminservices" = "<+stage.variables.AdminService>"
    "authservice-application" = "<+stage.variables.AuthService>"
    "till-api-gateway" = "<+stage.variables.TillAPIGateway>"
    "admin-console" = "<+stage.variables.AdminConsole>"
}

$artifactDownloaded = $false

foreach ($url in $fileUrls) {
    $fileName = [System.IO.Path]::GetFileName($url)
    
    if ($versions.ContainsKey($fileName)) {
        $version = $versions[$fileName]
        $destinationPath = Join-Path -Path $destination -ChildPath $fileName
        try {
            Invoke-WebRequest -Uri $url -OutFile $destinationPath -Credential $Credential -ErrorAction Stop
            Write-Host "Downloaded $fileName"
            $artifactDownloaded = $true
        } catch {
            Write-Host "Skipping $fileName."
        }
    } else {
        Write-Host "No version provided for $fileName. Skipping."
    }
}

if (-not $artifactDownloaded) {
    throw "Error: No artifact was downloaded. Please provide a valid version."
}






  
                
